{"version":3,"sources":["components/Input.js","components/Button.js","components/Container.js","components/Section.js","components/Balance.js","App.js","reportWebVitals.js","index.js"],"names":["Control","styled","div","Label","label","MyInput","input","ErrorMessage","Input","props","useField","field","meta","error","Button","button","Container","Section","section","Balance","span","formatter","Intl","NumberFormat","style","currency","minimumFranctionDigits","maximumFranctionDigits","App","useState","balance","setBalance","initialValues","deposit","contribution","years","rate","onSubmit","val","total","i","Math","round","compoundInterest","Number","format","validationSchema","Yup","required","typeError","min","max","name","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAGMA,EAAUC,IAAOC,IAAV,sDAGPC,EAAQF,IAAOG,MAAV,4FAMLC,EAAUJ,IAAOK,MAAV,sKAQPC,EAAeN,IAAOC,IAAV,8CAcHM,EAXD,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,MAAUK,EAAW,iBAClC,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACI,eAACZ,EAAD,WACI,cAACG,EAAD,UAAQC,IACR,cAACC,EAAD,2BAAaM,GAAWF,IACxB,cAACF,EAAD,UAAeK,EAAKC,YCjBjBC,EAVAb,IAAOc,OAAV,mNCOGC,EAPGf,IAAOC,IAAV,2GCSAe,EARChB,IAAOiB,QAAV,+LCMEC,EAPClB,IAAOmB,KAAV,wHCkBPC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,uBAAwB,EACxBC,uBAAwB,IAyCXC,MAvCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CACEC,cAAe,CACbC,QAAS,GACTC,aAAc,GACdC,MAAO,GACPC,KAAM,IAERC,SAda,SAAC,GAA4C,IAA1CJ,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9CE,EAlBe,SAACL,EAASC,EAAcC,EAAOC,GAGtD,IAFA,IAAIG,EAAQN,EAEHO,EAAI,EAAGA,EAAIL,EAAOK,IACzBD,GAASA,EAAQL,IAAiBE,EAAO,GAE3C,OAAOK,KAAKC,MAAMH,GAYJI,CAAiBC,OAAOX,GAAUW,OAAOV,GAAeU,OAAOT,GAAQS,OAAOR,IAC1FL,EAAWV,EAAUwB,OAAOP,KActBQ,iBAAkBC,IAAW,CAC3Bd,QAASc,MAAaC,SAAS,eAAeC,UAAU,gCACxDf,aAAca,MAAaC,SAAS,eAAeC,UAAU,gCAC7Dd,MAAOY,MAAaC,SAAS,eAAeC,UAAU,gCACtDb,KAAMW,MAAaC,SAAS,eAAeC,UAAU,gCAA6BC,IAAI,EAAG,mCAAmCC,IAAI,EAAG,qCAbvI,SAgBE,eAAC,IAAD,WACE,cAAC,EAAD,CAAOC,KAAK,UAAUhD,MAAM,wBAC5B,cAAC,EAAD,CAAOgD,KAAK,eAAehD,MAAM,0BACjC,cAAC,EAAD,CAAOgD,KAAK,QAAQhD,MAAM,YAC1B,cAAC,EAAD,CAAOgD,KAAK,OAAOhD,MAAM,wBACzB,cAAC,EAAD,CAAQiD,KAAK,SAAb,2BAGS,KAAZvB,EAAiB,eAAC,EAAD,8BAA0BA,KAAqB,WC/C1DwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6130df5e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { useField } from 'formik'\r\n\r\nconst Control = styled.div`\r\n    margin-bottom: 20px;\r\n`\r\nconst Label = styled.label`\r\n    color: #000;\r\n    display: block;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst MyInput = styled.input`\r\n    outline:none;\r\n    padding: 8px;\r\n    border: solid 1px #b1b3b5;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n`\r\nconst ErrorMessage = styled.div`\r\n    color: #f00;\r\n`\r\nconst Input = ({ label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n    return (\r\n        <Control>\r\n            <Label>{label}</Label>\r\n            <MyInput {...field} {...props} />\r\n            <ErrorMessage>{meta.error}</ErrorMessage>\r\n        </Control>\r\n    )\r\n}\r\n\r\nexport default Input","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n    background: palevioletred;\r\n    color: white;\r\n    font-size: 1em;\r\n    padding: 0.25em 1em;\r\n    border: 2px solid palevioletred;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport default Button;","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nheight: 100%;\r\nalign-items: center;\r\n`\r\n\r\nexport default Container\r\n\r\n","import styled from 'styled-components'\r\n\r\n\r\nconst Section = styled.section`\r\n    background-color: #eee;\r\n    border-top: solid 2px palevioletred;\r\n    padding: 20px 25px;\r\n    width: 500px;\r\n    box-shadow: 0px 2px 3px rgb(0, 0, 0, 0.3);\r\n`\r\n\r\nexport default Section","import styled from 'styled-components'\r\n\r\nconst Balance = styled.span`\r\n    font-size: 36px;\r\n    margin-top: 12px;\r\n    display: inline-block;\r\n    color: black;\r\n`\r\n\r\nexport default Balance;","import { useState } from 'react'\nimport * as Yup from 'yup'\nimport { Formik, Form } from 'formik'\nimport Input from './components/Input'\nimport Button from './components/Button'\nimport Container from './components/Container'\nimport Section from './components/Section'\nimport Balance from './components/Balance'\n\n//libreria para validaciones yup\n\nconst compoundInterest = (deposit, contribution, years, rate) => {\n  let total = deposit\n\n  for (let i = 0; i < years; i++) {\n    total = (total + contribution) * (rate + 1)\n  }\n  return Math.round(total)\n}\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFranctionDigits: 2,\n  maximumFranctionDigits: 2,\n})\nfunction App() {\n  const [balance, setBalance] = useState('')\n  const handleSubmit = ({ deposit, contribution, years, rate }) => {\n    const val = compoundInterest(Number(deposit), Number(contribution), Number(years), Number(rate))\n    setBalance(formatter.format(val))\n  }\n  return (\n    <Container>\n      <Section>\n        <Formik\n          initialValues={{\n            deposit: '',\n            contribution: '',\n            years: '',\n            rate: '',\n          }}\n          onSubmit={handleSubmit}\n          //validaciones con Yup\n          validationSchema={Yup.object({\n            deposit: Yup.number().required('Obligatorio').typeError('Debe introducir un número'),\n            contribution: Yup.number().required('Obligatorio').typeError('Debe introducir un número'),\n            years: Yup.number().required('Obligatorio').typeError('Debe introducir un número'),\n            rate: Yup.number().required('Obligatorio').typeError('Debe introducir un número').min(0, 'El valor debe estar entre 0 y 1').max(1, 'El valor debe estar entre 0 y 1'),\n          })}\n        >\n          <Form>\n            <Input name=\"deposit\" label=\"Depósito inicial\" />\n            <Input name=\"contribution\" label=\"Contribución anual\" />\n            <Input name=\"years\" label=\"Años\" />\n            <Input name=\"rate\" label=\"Interés estimado\" />   \n            <Button type=\"submit\">Calcular</Button>\n          </Form>\n        </Formik>\n        {balance !== '' ? <Balance>Balance final : {balance}</Balance> : null}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}